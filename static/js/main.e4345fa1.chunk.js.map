{"version":3,"sources":["logo.svg","CurrencyConverter.js","App.js","reportWebVitals.js","index.js"],"names":["CurrencyConverter","React","useState","currRates","setRates","finputChange","setFInputChange","sinputChange","setSInputChange","first","setFirst","second","setSecond","getRates","e","target","id","value","isNaN","result","parseFloat","toFixed","value1","useEffect","a","fetch","json","data","rates","fetchData","className","onChange","console","log","Object","keys","map","curr","index","join","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4345fa1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport \"./Currency.css\"\r\n\r\nexport default function CurrencyConverter() {\r\n\r\n    let [currRates, setRates] = React.useState(null);\r\n\r\n    let [finputChange, setFInputChange] = React.useState(0);\r\n    let [sinputChange, setSInputChange] = React.useState(0);\r\n\r\n    let [first, setFirst] = React.useState(\"USD\");\r\n    let [second, setSecond] = React.useState(\"INR\");\r\n\r\n    function convertCurrFirst(e){\r\n        setFirst(e.target.value);\r\n        console.log(sinputChange);\r\n        if(sinputChange >= 0 && !isNaN(sinputChange) && finputChange >= 0 && !isNaN(finputChange) ){\r\n\r\n                let value1 = parseFloat(currRates[second]);\r\n                let value2 = parseFloat(currRates[first]);\r\n                let result = ((value1/value2)* parseFloat(finputChange));\r\n                setSInputChange((parseFloat(result)).toFixed(2)); \r\n        }\r\n        \r\n\r\n    }\r\n\r\n    function convertCurrSecond(e){\r\n        setSecond(e.target.value);\r\n        if(sinputChange >= 0 && !isNaN(sinputChange) && finputChange >= 0 && !isNaN(finputChange) ){\r\n            \r\n                let value1 = parseFloat(currRates[second]);\r\n                let value2 = parseFloat(currRates[first]);\r\n                let result = ((value1/value2)* parseFloat(sinputChange));\r\n                setFInputChange((parseFloat(result)).toFixed(2)); \r\n        }\r\n    }\r\n\r\n    function getRates(e){\r\n\r\n        if(e.target.id == \"first-input\" && e.target.value >= 0 && !isNaN(e.target.value) ){\r\n            if(e.target.value == \"\"){\r\n                setSInputChange(\"\");\r\n                setFInputChange(\"\");\r\n            }\r\n            else{\r\n                setFInputChange(e.target.value);\r\n                let value1 = parseFloat(currRates[second]);\r\n                let value2 = parseFloat(currRates[first]);\r\n                let result = ((value1/value2)* parseFloat(e.target.value));\r\n                setSInputChange((parseFloat(result)).toFixed(2));\r\n            }\r\n            \r\n            \r\n        }\r\n        else if(e.target.id == \"second-input\" && e.target.value >= 0 && !isNaN(e.target.value)){\r\n            if(e.target.value == \"\"){\r\n                setFInputChange(\"\");\r\n                setSInputChange(\"\");\r\n            }\r\n            else{\r\n                setSInputChange(e.target.value);\r\n                let value1 = parseFloat(currRates[second]);\r\n                let value2 = parseFloat(currRates[first]);\r\n                let result = ((value2/value1)* parseFloat(e.target.value));\r\n                setFInputChange((parseFloat(result)).toFixed(2));\r\n            }\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        async function fetchData(){\r\n            let result = await fetch(\"http://api.exchangeratesapi.io/v1/latest?access_key=c71066a02f3823951ca8c4cd596d3875&format=1\");\r\n            let data = await result.json();\r\n            setRates(data.rates);\r\n            \r\n        }\r\n        fetchData();\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"curr-div\">\r\n            <h1>Currency Converter</h1>\r\n            <div className=\"first-div\">\r\n                <select id=\"first-select\" onChange={convertCurrFirst} value={first} >\r\n                    {\r\n                        currRates ? Object.keys(currRates).map((curr, index) => (curr == second) ? null : <option rates={currRates.curr} value={curr} id={[curr, \"1\"].join(\"\")} key={index}>{curr}</option> ) : <option>Loading</option>\r\n                    }\r\n                </select>\r\n                <input id=\"first-input\" onChange={getRates} value={finputChange}/>\r\n            </div>\r\n            <div className=\"second-div\">\r\n                <select id=\"second-select\" onChange={convertCurrSecond} value={second}>\r\n                    {\r\n                         currRates ? Object.keys(currRates).map((curr, index) => (curr == first) ? null : <option rates={currRates.curr} id={[curr, \"2\"].join(\"\")} value={curr} key={index}>{curr}</option> ) : <option>Loading</option>\r\n                    }\r\n                </select>\r\n                <input id=\"second-input\" onChange={getRates} value={sinputChange}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport CurrencyConverter from './CurrencyConverter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CurrencyConverter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}